//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace WebberCross.BdcModelBuilder.Tests.ASMXBikeServiceReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BikeServiceSoap", Namespace="http://tempuri.org/")]
    public partial class BikeService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetMountainBikesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMountainBikeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMountainBikeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMountainBikeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMountainBikesComplexOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMountainBikeComplexOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMountainBikeComplexOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMountainBikeComplexOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BikeService() {
            this.Url = global::WebberCross.BdcModelBuilder.Tests.Properties.Settings.Default.WebberCross_BdcModelBuilder_Tests_ASMXBikeServiceReference_BikeService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetMountainBikesCompletedEventHandler GetMountainBikesCompleted;
        
        /// <remarks/>
        public event GetMountainBikeCompletedEventHandler GetMountainBikeCompleted;
        
        /// <remarks/>
        public event AddMountainBikeCompletedEventHandler AddMountainBikeCompleted;
        
        /// <remarks/>
        public event DeleteMountainBikeCompletedEventHandler DeleteMountainBikeCompleted;
        
        /// <remarks/>
        public event GetMountainBikesComplexCompletedEventHandler GetMountainBikesComplexCompleted;
        
        /// <remarks/>
        public event GetMountainBikeComplexCompletedEventHandler GetMountainBikeComplexCompleted;
        
        /// <remarks/>
        public event AddMountainBikeComplexCompletedEventHandler AddMountainBikeComplexCompleted;
        
        /// <remarks/>
        public event DeleteMountainBikeComplexCompletedEventHandler DeleteMountainBikeComplexCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMountainBikes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MountainBike[] GetMountainBikes() {
            object[] results = this.Invoke("GetMountainBikes", new object[0]);
            return ((MountainBike[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMountainBikesAsync() {
            this.GetMountainBikesAsync(null);
        }
        
        /// <remarks/>
        public void GetMountainBikesAsync(object userState) {
            if ((this.GetMountainBikesOperationCompleted == null)) {
                this.GetMountainBikesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMountainBikesOperationCompleted);
            }
            this.InvokeAsync("GetMountainBikes", new object[0], this.GetMountainBikesOperationCompleted, userState);
        }
        
        private void OnGetMountainBikesOperationCompleted(object arg) {
            if ((this.GetMountainBikesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMountainBikesCompleted(this, new GetMountainBikesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMountainBike", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MountainBike GetMountainBike(int id) {
            object[] results = this.Invoke("GetMountainBike", new object[] {
                        id});
            return ((MountainBike)(results[0]));
        }
        
        /// <remarks/>
        public void GetMountainBikeAsync(int id) {
            this.GetMountainBikeAsync(id, null);
        }
        
        /// <remarks/>
        public void GetMountainBikeAsync(int id, object userState) {
            if ((this.GetMountainBikeOperationCompleted == null)) {
                this.GetMountainBikeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMountainBikeOperationCompleted);
            }
            this.InvokeAsync("GetMountainBike", new object[] {
                        id}, this.GetMountainBikeOperationCompleted, userState);
        }
        
        private void OnGetMountainBikeOperationCompleted(object arg) {
            if ((this.GetMountainBikeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMountainBikeCompleted(this, new GetMountainBikeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddMountainBike", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MountainBike AddMountainBike(MountainBike bike) {
            object[] results = this.Invoke("AddMountainBike", new object[] {
                        bike});
            return ((MountainBike)(results[0]));
        }
        
        /// <remarks/>
        public void AddMountainBikeAsync(MountainBike bike) {
            this.AddMountainBikeAsync(bike, null);
        }
        
        /// <remarks/>
        public void AddMountainBikeAsync(MountainBike bike, object userState) {
            if ((this.AddMountainBikeOperationCompleted == null)) {
                this.AddMountainBikeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMountainBikeOperationCompleted);
            }
            this.InvokeAsync("AddMountainBike", new object[] {
                        bike}, this.AddMountainBikeOperationCompleted, userState);
        }
        
        private void OnAddMountainBikeOperationCompleted(object arg) {
            if ((this.AddMountainBikeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMountainBikeCompleted(this, new AddMountainBikeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteMountainBike", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteMountainBike(int id) {
            this.Invoke("DeleteMountainBike", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void DeleteMountainBikeAsync(int id) {
            this.DeleteMountainBikeAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteMountainBikeAsync(int id, object userState) {
            if ((this.DeleteMountainBikeOperationCompleted == null)) {
                this.DeleteMountainBikeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMountainBikeOperationCompleted);
            }
            this.InvokeAsync("DeleteMountainBike", new object[] {
                        id}, this.DeleteMountainBikeOperationCompleted, userState);
        }
        
        private void OnDeleteMountainBikeOperationCompleted(object arg) {
            if ((this.DeleteMountainBikeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMountainBikeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMountainBikesComplex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessDataEntity GetMountainBikesComplex() {
            object[] results = this.Invoke("GetMountainBikesComplex", new object[0]);
            return ((BusinessDataEntity)(results[0]));
        }
        
        /// <remarks/>
        public void GetMountainBikesComplexAsync() {
            this.GetMountainBikesComplexAsync(null);
        }
        
        /// <remarks/>
        public void GetMountainBikesComplexAsync(object userState) {
            if ((this.GetMountainBikesComplexOperationCompleted == null)) {
                this.GetMountainBikesComplexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMountainBikesComplexOperationCompleted);
            }
            this.InvokeAsync("GetMountainBikesComplex", new object[0], this.GetMountainBikesComplexOperationCompleted, userState);
        }
        
        private void OnGetMountainBikesComplexOperationCompleted(object arg) {
            if ((this.GetMountainBikesComplexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMountainBikesComplexCompleted(this, new GetMountainBikesComplexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMountainBikeComplex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessDataEntity GetMountainBikeComplex(BusinessDataEntity bde) {
            object[] results = this.Invoke("GetMountainBikeComplex", new object[] {
                        bde});
            return ((BusinessDataEntity)(results[0]));
        }
        
        /// <remarks/>
        public void GetMountainBikeComplexAsync(BusinessDataEntity bde) {
            this.GetMountainBikeComplexAsync(bde, null);
        }
        
        /// <remarks/>
        public void GetMountainBikeComplexAsync(BusinessDataEntity bde, object userState) {
            if ((this.GetMountainBikeComplexOperationCompleted == null)) {
                this.GetMountainBikeComplexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMountainBikeComplexOperationCompleted);
            }
            this.InvokeAsync("GetMountainBikeComplex", new object[] {
                        bde}, this.GetMountainBikeComplexOperationCompleted, userState);
        }
        
        private void OnGetMountainBikeComplexOperationCompleted(object arg) {
            if ((this.GetMountainBikeComplexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMountainBikeComplexCompleted(this, new GetMountainBikeComplexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddMountainBikeComplex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessDataEntity AddMountainBikeComplex(BusinessDataEntity bde) {
            object[] results = this.Invoke("AddMountainBikeComplex", new object[] {
                        bde});
            return ((BusinessDataEntity)(results[0]));
        }
        
        /// <remarks/>
        public void AddMountainBikeComplexAsync(BusinessDataEntity bde) {
            this.AddMountainBikeComplexAsync(bde, null);
        }
        
        /// <remarks/>
        public void AddMountainBikeComplexAsync(BusinessDataEntity bde, object userState) {
            if ((this.AddMountainBikeComplexOperationCompleted == null)) {
                this.AddMountainBikeComplexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMountainBikeComplexOperationCompleted);
            }
            this.InvokeAsync("AddMountainBikeComplex", new object[] {
                        bde}, this.AddMountainBikeComplexOperationCompleted, userState);
        }
        
        private void OnAddMountainBikeComplexOperationCompleted(object arg) {
            if ((this.AddMountainBikeComplexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMountainBikeComplexCompleted(this, new AddMountainBikeComplexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteMountainBikeComplex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteMountainBikeComplex(BusinessDataEntity bde) {
            this.Invoke("DeleteMountainBikeComplex", new object[] {
                        bde});
        }
        
        /// <remarks/>
        public void DeleteMountainBikeComplexAsync(BusinessDataEntity bde) {
            this.DeleteMountainBikeComplexAsync(bde, null);
        }
        
        /// <remarks/>
        public void DeleteMountainBikeComplexAsync(BusinessDataEntity bde, object userState) {
            if ((this.DeleteMountainBikeComplexOperationCompleted == null)) {
                this.DeleteMountainBikeComplexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMountainBikeComplexOperationCompleted);
            }
            this.InvokeAsync("DeleteMountainBikeComplex", new object[] {
                        bde}, this.DeleteMountainBikeComplexOperationCompleted, userState);
        }
        
        private void OnDeleteMountainBikeComplexOperationCompleted(object arg) {
            if ((this.DeleteMountainBikeComplexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMountainBikeComplexCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MountainBike {
        
        private int idField;
        
        private string manufacturerField;
        
        private string modelField;
        
        private string forksField;
        
        private string rearShockField;
        
        private string brakeSetField;
        
        private int quantityInStockField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public string Forks {
            get {
                return this.forksField;
            }
            set {
                this.forksField = value;
            }
        }
        
        /// <remarks/>
        public string RearShock {
            get {
                return this.rearShockField;
            }
            set {
                this.rearShockField = value;
            }
        }
        
        /// <remarks/>
        public string BrakeSet {
            get {
                return this.brakeSetField;
            }
            set {
                this.brakeSetField = value;
            }
        }
        
        /// <remarks/>
        public int QuantityInStock {
            get {
                return this.quantityInStockField;
            }
            set {
                this.quantityInStockField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BusinessDataEntity {
        
        private int idField;
        
        private MountainBike bikeField;
        
        private MountainBike[] bikesField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public MountainBike Bike {
            get {
                return this.bikeField;
            }
            set {
                this.bikeField = value;
            }
        }
        
        /// <remarks/>
        public MountainBike[] Bikes {
            get {
                return this.bikesField;
            }
            set {
                this.bikesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMountainBikesCompletedEventHandler(object sender, GetMountainBikesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMountainBikesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMountainBikesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MountainBike[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MountainBike[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMountainBikeCompletedEventHandler(object sender, GetMountainBikeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMountainBikeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMountainBikeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MountainBike Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MountainBike)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddMountainBikeCompletedEventHandler(object sender, AddMountainBikeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMountainBikeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMountainBikeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MountainBike Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MountainBike)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteMountainBikeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMountainBikesComplexCompletedEventHandler(object sender, GetMountainBikesComplexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMountainBikesComplexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMountainBikesComplexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessDataEntity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessDataEntity)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMountainBikeComplexCompletedEventHandler(object sender, GetMountainBikeComplexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMountainBikeComplexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMountainBikeComplexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessDataEntity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessDataEntity)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddMountainBikeComplexCompletedEventHandler(object sender, AddMountainBikeComplexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMountainBikeComplexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMountainBikeComplexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessDataEntity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessDataEntity)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteMountainBikeComplexCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591